$schema: 'http://json.schemastore.org/eslintrc'

plugins:
  - '@typescript-eslint'

parser: '@typescript-eslint/parser'

parserOptions:
  project: ./tsconfig.json
  sourceType: module
  ecmaVersion: 2020
  tsconfigRootDir: .

rules:
  # Possible Errors
  getter-return: 'off'
  no-dupe-args: 'off'
  no-dupe-keys: 'off'
  no-extra-parens: 'off'
  no-extra-semi: 'off'
  no-unreachable: 'off'
  valid-typeof: 'off'

  # Best Practices
  default-param-last: 'off'
  no-empty-function: 'off'
  no-implied-eval: 'off'
  no-magic-numbers: 'off'
  no-redeclare: 'off'
  no-return-await: 'off'
  no-throw-literal: 'off'
  no-unused-expressions: 'off'
  require-await: 'off'

  # Strict
  strict: 'off'

  # Variables
  no-undef: 'off'
  no-unused-vars: 'off'
  no-use-before-define: 'off'

  # Stylistic Issues
  brace-style: 'off'
  camelcase: 'off'
  comma-spacing: 'off'
  func-call-spacing: 'off'
  indent: 'off'
  no-array-constructor: 'off'
  quotes: 'off'
  semi: 'off'
  space-before-function-paren: 'off'

  # ECMAScript 6
  constructor-super: 'off'
  no-const-assign: 'off'
  no-dupe-class-members: 'off'
  no-new-symbol: 'off'
  no-this-before-super: 'off'
  no-useless-constructor: 'off'

  # typescript-eslint plugin
  '@typescript-eslint/adjacent-overload-signatures': error
  '@typescript-eslint/array-type':
    - error
    - default: array-simple
  '@typescript-eslint/await-thenable': error
  '@typescript-eslint/ban-ts-comment': error
  '@typescript-eslint/ban-types':
    - error
    - types:
        Boolean:
          message: Use boolean instead
          fixWith: boolean
        Function:
          message: Use a specific function like () => void
        Number:
          message: Use number instead
          fixWith: number
        Object:
          message: 'Use {} instead'
          fixWith: '{}'
        String:
          message: Use string instead
          fixWith: string
        Symbol:
          message: Use symbol instead
          fixWith: symbol
  '@typescript-eslint/brace-style': error
  '@typescript-eslint/camelcase': error
  '@typescript-eslint/class-name-casing': error
  '@typescript-eslint/comma-spacing': error
  '@typescript-eslint/consistent-type-assertions':
    - error
    - assertionStyle: as
      objectLiteralTypeAssertions: never
  '@typescript-eslint/consistent-type-definitions':
    - error
    - interface
  '@typescript-eslint/default-param-last': error
  '@typescript-eslint/explicit-function-return-type': 'off'
  '@typescript-eslint/explicit-member-accessibility':
    - error
    - accessibility: no-public
  '@typescript-eslint/explicit-module-boundary-types': 'off'
  '@typescript-eslint/func-call-spacing': error
  '@typescript-eslint/generic-type-naming': 'off'
  '@typescript-eslint/indent':
    - error
    - 2
  '@typescript-eslint/interface-name-prefix': error
  '@typescript-eslint/member-delimiter-style': error
  '@typescript-eslint/member-naming': 'off'
  '@typescript-eslint/member-ordering':
    - error
    - default:
        - static-field
        - instance-field
        - static-method
        - instance-method
  '@typescript-eslint/naming-convention': 'off'
  '@typescript-eslint/no-base-to-string': error
  '@typescript-eslint/no-array-constructor': error
  '@typescript-eslint/no-dynamic-delete': error
  '@typescript-eslint/no-empty-function': error
  '@typescript-eslint/no-empty-interface': error
  '@typescript-eslint/no-explicit-any': 'off'
  '@typescript-eslint/no-extra-non-null-assertion': error
  '@typescript-eslint/no-extra-parens': error
  '@typescript-eslint/no-extra-semi': error
  '@typescript-eslint/no-extraneous-class':
    - error
    - allowWithDecorator: true
  '@typescript-eslint/no-floating-promises': error
  '@typescript-eslint/no-for-in-array': error
  '@typescript-eslint/no-implied-eval': error
  '@typescript-eslint/no-inferrable-types': error
  '@typescript-eslint/no-magic-numbers':
    - error
    - enforceConst: true
      ignoreArrayIndexes: true
      ignoreReadonlyClassProperties: true
      ignoreEnums: true
  '@typescript-eslint/no-misused-new': error
  '@typescript-eslint/no-misused-promises': error
  '@typescript-eslint/no-namespace': error
  '@typescript-eslint/no-non-null-asserted-optional-chain': error
  '@typescript-eslint/no-non-null-assertion': error
  '@typescript-eslint/no-parameter-properties':
    - error
    - allows:
        - private readonly
  '@typescript-eslint/no-require-imports': error
  '@typescript-eslint/no-this-alias': error
  '@typescript-eslint/no-throw-literal': error
  '@typescript-eslint/no-type-alias':
    - error
    - allowAliases: always
  '@typescript-eslint/no-unnecessary-boolean-literal-compare': error
  '@typescript-eslint/no-unnecessary-condition': 'off'
  '@typescript-eslint/no-unnecessary-qualifier': error
  '@typescript-eslint/no-unnecessary-type-arguments': error
  '@typescript-eslint/no-unnecessary-type-assertion': error
  '@typescript-eslint/no-unsafe-call': 'off'
  '@typescript-eslint/no-unsafe-member-access': 'off'
  '@typescript-eslint/no-unsafe-return': 'off'
  '@typescript-eslint/no-untyped-public-signature': 'off'
  '@typescript-eslint/no-unused-expressions': error
  '@typescript-eslint/no-unused-vars': 'off'
  '@typescript-eslint/no-unused-vars-experimental': 'off'
  '@typescript-eslint/no-use-before-define': 'off'
  '@typescript-eslint/no-useless-constructor': 'off'
  '@typescript-eslint/no-var-requires': error
  '@typescript-eslint/prefer-as-const': error
  '@typescript-eslint/prefer-for-of': error
  '@typescript-eslint/prefer-function-type': error
  '@typescript-eslint/prefer-includes': error
  '@typescript-eslint/prefer-namespace-keyword': 'off'
  '@typescript-eslint/prefer-nullish-coalescing': error
  '@typescript-eslint/prefer-optional-chain': error
  '@typescript-eslint/prefer-readonly': error
  '@typescript-eslint/prefer-readonly-parameter-types': 'off'
  '@typescript-eslint/prefer-regexp-exec': error
  '@typescript-eslint/prefer-string-starts-ends-with': error
  '@typescript-eslint/promise-function-async': error
  '@typescript-eslint/quotes':
    - error
    - single
    - avoidEscape: true
  '@typescript-eslint/require-array-sort-compare': error
  '@typescript-eslint/require-await': error
  '@typescript-eslint/restrict-plus-operands':
    - error
    - checkCompoundAssignments: true
  '@typescript-eslint/restrict-template-expressions': error
  '@typescript-eslint/return-await': error
  '@typescript-eslint/semi': error
  '@typescript-eslint/space-before-function-paren':
    - error
    - anonymous: never
      named: never
      asyncArrow: always
  '@typescript-eslint/strict-boolean-expressions': 'off'
  '@typescript-eslint/switch-exhaustiveness-check': error
  '@typescript-eslint/triple-slash-reference':
    - error
    - path: never
      types: never
      lib: never
  '@typescript-eslint/type-annotation-spacing': error
  '@typescript-eslint/typedef': 'off'
  '@typescript-eslint/unbound-method':
    - error
    - ignoreStatic: true
  '@typescript-eslint/unified-signatures': error
